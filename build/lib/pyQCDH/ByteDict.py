# #########################################
# # Here is how the byte_dict is generated:
# #########################################
# bits_dict = {"00": 2, "11": 0, "01": -9, "10": 1}
# def translate_byte(n):
#     """
#     Translate a int into a list of digital strings,
#     then into genotype numbers 0, 1, or 2 (standing for major_homozygote, heterozygote, and minor_homozygote).
#     :param one_byte:
#     :type one_byte: bytes
#     :return:
#     :rtype: list[str]
#     """
#     # binary represetation of n
#     n_bin_repr = "{0:08b}".format(n)
#     # split n_bin_repr into units of 2 bits each
#     res = []
#     res.append(n_bin_repr[:2])
#     res.append(n_bin_repr[2:4])
#     res.append(n_bin_repr[4:6])
#     res.append(n_bin_repr[6:])
#     res = [bits_dict[x] for x in res]
#     res.reverse()
#     return res
#
# for one_byte in range(256):
#     data = translate_byte(one_byte)
#     print(one_byte, end="")
#     print(": ", end="")
#     print(data, end="")
#     print(",")


byte_dict = {
    0: [2, 2, 2, 2],
    1: [-9, 2, 2, 2],
    2: [1, 2, 2, 2],
    3: [0, 2, 2, 2],
    4: [2, -9, 2, 2],
    5: [-9, -9, 2, 2],
    6: [1, -9, 2, 2],
    7: [0, -9, 2, 2],
    8: [2, 1, 2, 2],
    9: [-9, 1, 2, 2],
    10: [1, 1, 2, 2],
    11: [0, 1, 2, 2],
    12: [2, 0, 2, 2],
    13: [-9, 0, 2, 2],
    14: [1, 0, 2, 2],
    15: [0, 0, 2, 2],
    16: [2, 2, -9, 2],
    17: [-9, 2, -9, 2],
    18: [1, 2, -9, 2],
    19: [0, 2, -9, 2],
    20: [2, -9, -9, 2],
    21: [-9, -9, -9, 2],
    22: [1, -9, -9, 2],
    23: [0, -9, -9, 2],
    24: [2, 1, -9, 2],
    25: [-9, 1, -9, 2],
    26: [1, 1, -9, 2],
    27: [0, 1, -9, 2],
    28: [2, 0, -9, 2],
    29: [-9, 0, -9, 2],
    30: [1, 0, -9, 2],
    31: [0, 0, -9, 2],
    32: [2, 2, 1, 2],
    33: [-9, 2, 1, 2],
    34: [1, 2, 1, 2],
    35: [0, 2, 1, 2],
    36: [2, -9, 1, 2],
    37: [-9, -9, 1, 2],
    38: [1, -9, 1, 2],
    39: [0, -9, 1, 2],
    40: [2, 1, 1, 2],
    41: [-9, 1, 1, 2],
    42: [1, 1, 1, 2],
    43: [0, 1, 1, 2],
    44: [2, 0, 1, 2],
    45: [-9, 0, 1, 2],
    46: [1, 0, 1, 2],
    47: [0, 0, 1, 2],
    48: [2, 2, 0, 2],
    49: [-9, 2, 0, 2],
    50: [1, 2, 0, 2],
    51: [0, 2, 0, 2],
    52: [2, -9, 0, 2],
    53: [-9, -9, 0, 2],
    54: [1, -9, 0, 2],
    55: [0, -9, 0, 2],
    56: [2, 1, 0, 2],
    57: [-9, 1, 0, 2],
    58: [1, 1, 0, 2],
    59: [0, 1, 0, 2],
    60: [2, 0, 0, 2],
    61: [-9, 0, 0, 2],
    62: [1, 0, 0, 2],
    63: [0, 0, 0, 2],
    64: [2, 2, 2, -9],
    65: [-9, 2, 2, -9],
    66: [1, 2, 2, -9],
    67: [0, 2, 2, -9],
    68: [2, -9, 2, -9],
    69: [-9, -9, 2, -9],
    70: [1, -9, 2, -9],
    71: [0, -9, 2, -9],
    72: [2, 1, 2, -9],
    73: [-9, 1, 2, -9],
    74: [1, 1, 2, -9],
    75: [0, 1, 2, -9],
    76: [2, 0, 2, -9],
    77: [-9, 0, 2, -9],
    78: [1, 0, 2, -9],
    79: [0, 0, 2, -9],
    80: [2, 2, -9, -9],
    81: [-9, 2, -9, -9],
    82: [1, 2, -9, -9],
    83: [0, 2, -9, -9],
    84: [2, -9, -9, -9],
    85: [-9, -9, -9, -9],
    86: [1, -9, -9, -9],
    87: [0, -9, -9, -9],
    88: [2, 1, -9, -9],
    89: [-9, 1, -9, -9],
    90: [1, 1, -9, -9],
    91: [0, 1, -9, -9],
    92: [2, 0, -9, -9],
    93: [-9, 0, -9, -9],
    94: [1, 0, -9, -9],
    95: [0, 0, -9, -9],
    96: [2, 2, 1, -9],
    97: [-9, 2, 1, -9],
    98: [1, 2, 1, -9],
    99: [0, 2, 1, -9],
    100: [2, -9, 1, -9],
    101: [-9, -9, 1, -9],
    102: [1, -9, 1, -9],
    103: [0, -9, 1, -9],
    104: [2, 1, 1, -9],
    105: [-9, 1, 1, -9],
    106: [1, 1, 1, -9],
    107: [0, 1, 1, -9],
    108: [2, 0, 1, -9],
    109: [-9, 0, 1, -9],
    110: [1, 0, 1, -9],
    111: [0, 0, 1, -9],
    112: [2, 2, 0, -9],
    113: [-9, 2, 0, -9],
    114: [1, 2, 0, -9],
    115: [0, 2, 0, -9],
    116: [2, -9, 0, -9],
    117: [-9, -9, 0, -9],
    118: [1, -9, 0, -9],
    119: [0, -9, 0, -9],
    120: [2, 1, 0, -9],
    121: [-9, 1, 0, -9],
    122: [1, 1, 0, -9],
    123: [0, 1, 0, -9],
    124: [2, 0, 0, -9],
    125: [-9, 0, 0, -9],
    126: [1, 0, 0, -9],
    127: [0, 0, 0, -9],
    128: [2, 2, 2, 1],
    129: [-9, 2, 2, 1],
    130: [1, 2, 2, 1],
    131: [0, 2, 2, 1],
    132: [2, -9, 2, 1],
    133: [-9, -9, 2, 1],
    134: [1, -9, 2, 1],
    135: [0, -9, 2, 1],
    136: [2, 1, 2, 1],
    137: [-9, 1, 2, 1],
    138: [1, 1, 2, 1],
    139: [0, 1, 2, 1],
    140: [2, 0, 2, 1],
    141: [-9, 0, 2, 1],
    142: [1, 0, 2, 1],
    143: [0, 0, 2, 1],
    144: [2, 2, -9, 1],
    145: [-9, 2, -9, 1],
    146: [1, 2, -9, 1],
    147: [0, 2, -9, 1],
    148: [2, -9, -9, 1],
    149: [-9, -9, -9, 1],
    150: [1, -9, -9, 1],
    151: [0, -9, -9, 1],
    152: [2, 1, -9, 1],
    153: [-9, 1, -9, 1],
    154: [1, 1, -9, 1],
    155: [0, 1, -9, 1],
    156: [2, 0, -9, 1],
    157: [-9, 0, -9, 1],
    158: [1, 0, -9, 1],
    159: [0, 0, -9, 1],
    160: [2, 2, 1, 1],
    161: [-9, 2, 1, 1],
    162: [1, 2, 1, 1],
    163: [0, 2, 1, 1],
    164: [2, -9, 1, 1],
    165: [-9, -9, 1, 1],
    166: [1, -9, 1, 1],
    167: [0, -9, 1, 1],
    168: [2, 1, 1, 1],
    169: [-9, 1, 1, 1],
    170: [1, 1, 1, 1],
    171: [0, 1, 1, 1],
    172: [2, 0, 1, 1],
    173: [-9, 0, 1, 1],
    174: [1, 0, 1, 1],
    175: [0, 0, 1, 1],
    176: [2, 2, 0, 1],
    177: [-9, 2, 0, 1],
    178: [1, 2, 0, 1],
    179: [0, 2, 0, 1],
    180: [2, -9, 0, 1],
    181: [-9, -9, 0, 1],
    182: [1, -9, 0, 1],
    183: [0, -9, 0, 1],
    184: [2, 1, 0, 1],
    185: [-9, 1, 0, 1],
    186: [1, 1, 0, 1],
    187: [0, 1, 0, 1],
    188: [2, 0, 0, 1],
    189: [-9, 0, 0, 1],
    190: [1, 0, 0, 1],
    191: [0, 0, 0, 1],
    192: [2, 2, 2, 0],
    193: [-9, 2, 2, 0],
    194: [1, 2, 2, 0],
    195: [0, 2, 2, 0],
    196: [2, -9, 2, 0],
    197: [-9, -9, 2, 0],
    198: [1, -9, 2, 0],
    199: [0, -9, 2, 0],
    200: [2, 1, 2, 0],
    201: [-9, 1, 2, 0],
    202: [1, 1, 2, 0],
    203: [0, 1, 2, 0],
    204: [2, 0, 2, 0],
    205: [-9, 0, 2, 0],
    206: [1, 0, 2, 0],
    207: [0, 0, 2, 0],
    208: [2, 2, -9, 0],
    209: [-9, 2, -9, 0],
    210: [1, 2, -9, 0],
    211: [0, 2, -9, 0],
    212: [2, -9, -9, 0],
    213: [-9, -9, -9, 0],
    214: [1, -9, -9, 0],
    215: [0, -9, -9, 0],
    216: [2, 1, -9, 0],
    217: [-9, 1, -9, 0],
    218: [1, 1, -9, 0],
    219: [0, 1, -9, 0],
    220: [2, 0, -9, 0],
    221: [-9, 0, -9, 0],
    222: [1, 0, -9, 0],
    223: [0, 0, -9, 0],
    224: [2, 2, 1, 0],
    225: [-9, 2, 1, 0],
    226: [1, 2, 1, 0],
    227: [0, 2, 1, 0],
    228: [2, -9, 1, 0],
    229: [-9, -9, 1, 0],
    230: [1, -9, 1, 0],
    231: [0, -9, 1, 0],
    232: [2, 1, 1, 0],
    233: [-9, 1, 1, 0],
    234: [1, 1, 1, 0],
    235: [0, 1, 1, 0],
    236: [2, 0, 1, 0],
    237: [-9, 0, 1, 0],
    238: [1, 0, 1, 0],
    239: [0, 0, 1, 0],
    240: [2, 2, 0, 0],
    241: [-9, 2, 0, 0],
    242: [1, 2, 0, 0],
    243: [0, 2, 0, 0],
    244: [2, -9, 0, 0],
    245: [-9, -9, 0, 0],
    246: [1, -9, 0, 0],
    247: [0, -9, 0, 0],
    248: [2, 1, 0, 0],
    249: [-9, 1, 0, 0],
    250: [1, 1, 0, 0],
    251: [0, 1, 0, 0],
    252: [2, 0, 0, 0],
    253: [-9, 0, 0, 0],
    254: [1, 0, 0, 0],
    255: [0, 0, 0, 0],
}


